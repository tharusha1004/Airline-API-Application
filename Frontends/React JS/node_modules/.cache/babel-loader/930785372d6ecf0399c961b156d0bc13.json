{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = _interopDefault(require('react'));\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar reactBootstrap = require('react-bootstrap');\n\nvar reactConfirm = require('react-confirm');\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar Confirmation = function Confirmation(_ref) {\n  var show = _ref.show,\n      proceed = _ref.proceed,\n      dismiss = _ref.dismiss,\n      cancel = _ref.cancel,\n      confirmation = _ref.confirmation,\n      title = _ref.title,\n      okText = _ref.okText,\n      cancelText = _ref.cancelText,\n      okButtonStyle = _ref.okButtonStyle,\n      cancelButtonStyle = _ref.cancelButtonStyle,\n      options = _objectWithoutProperties(_ref, [\"show\", \"proceed\", \"dismiss\", \"cancel\", \"confirmation\", \"title\", \"okText\", \"cancelText\", \"okButtonStyle\", \"cancelButtonStyle\"]);\n\n  var header = title ? React.createElement(reactBootstrap.Modal.Header, null, React.createElement(reactBootstrap.Modal.Title, null, title)) : undefined;\n  return React.createElement(reactBootstrap.Modal, {\n    size: \"small\",\n    show: show,\n    onHide: function onHide() {\n      return proceed(false);\n    },\n    backdrop: \"static\",\n    centered: true\n  }, header, React.createElement(reactBootstrap.Modal.Body, null, confirmation), React.createElement(reactBootstrap.Modal.Footer, null, React.createElement(reactBootstrap.Button, {\n    variant: cancelButtonStyle,\n    onClick: function onClick() {\n      return proceed(false);\n    }\n  }, cancelText), React.createElement(reactBootstrap.Button, {\n    variant: okButtonStyle,\n    onClick: function onClick() {\n      return proceed(true);\n    }\n  }, okText)));\n};\n\nConfirmation.propTypes = {\n  /** header title */\n  title: PropTypes.string,\n  confirmation: PropTypes.string,\n  // arguments of your confirm function\n  okText: PropTypes.string,\n  cancelText: PropTypes.string,\n  okButtonStyle: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark', 'link']),\n  cancelButtonStyle: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark', 'link']),\n  show: PropTypes.bool,\n  // from confirmable.\n  proceed: PropTypes.func,\n  // from confirmable.\n  cancel: PropTypes.func,\n  // from confirmable.\n  dismiss: PropTypes.func // from confirmable.\n\n};\nConfirmation.defaultProps = {\n  title: undefined,\n  confirmation: undefined,\n  okText: 'OK',\n  cancelText: 'Cancel',\n  okButtonStyle: 'primary',\n  cancelButtonStyle: 'secondary',\n  show: undefined,\n  proceed: undefined,\n  cancel: undefined,\n  dismiss: undefined\n};\nvar confirmLow = reactConfirm.createConfirmation(reactConfirm.confirmable(Confirmation));\n\nvar confirm = function confirm(message) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return confirmLow(Object.assign({\n    confirmation: message\n  }, options));\n};\n\nvar Alert = function Alert(_ref2) {\n  var show = _ref2.show,\n      proceed = _ref2.proceed,\n      dismiss = _ref2.dismiss,\n      cancel = _ref2.cancel,\n      confirmation = _ref2.confirmation,\n      title = _ref2.title,\n      okText = _ref2.okText,\n      okButtonStyle = _ref2.okButtonStyle,\n      options = _objectWithoutProperties(_ref2, [\"show\", \"proceed\", \"dismiss\", \"cancel\", \"confirmation\", \"title\", \"okText\", \"okButtonStyle\"]);\n\n  var header = title ? React.createElement(reactBootstrap.Modal.Header, null, React.createElement(reactBootstrap.Modal.Title, null, title)) : undefined;\n  return React.createElement(reactBootstrap.Modal, {\n    size: \"small\",\n    show: show,\n    onHide: function onHide() {\n      return proceed();\n    },\n    keyboard: true,\n    backdrop: \"static\",\n    centered: true\n  }, header, React.createElement(reactBootstrap.Modal.Body, null, confirmation), React.createElement(reactBootstrap.Modal.Footer, null, React.createElement(reactBootstrap.Button, {\n    variant: okButtonStyle,\n    onClick: function onClick() {\n      return proceed();\n    }\n  }, okText)));\n};\n\nAlert.propTypes = {\n  /** header title */\n  title: PropTypes.string,\n  confirmation: PropTypes.string,\n  // arguments of your confirm function\n  okText: PropTypes.string,\n  okButtonStyle: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark', 'link']),\n  show: PropTypes.bool,\n  // from confirmable.\n  proceed: PropTypes.func,\n  // from confirmable.\n  cancel: PropTypes.func,\n  // from confirmable.\n  dismiss: PropTypes.func // from confirmable.\n\n};\nAlert.defaultProps = {\n  title: undefined,\n  confirmation: undefined,\n  okText: 'OK',\n  okButtonStyle: 'primary',\n  show: undefined,\n  proceed: undefined,\n  cancel: undefined,\n  dismiss: undefined\n};\nvar alertLow = reactConfirm.createConfirmation(reactConfirm.confirmable(Alert));\n\nvar alert = function alert(message) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return alertLow(Object.assign({\n    confirmation: message\n  }, options));\n};\n\nexports.alert = alert;\nexports.confirm = confirm;","map":null,"metadata":{},"sourceType":"script"}